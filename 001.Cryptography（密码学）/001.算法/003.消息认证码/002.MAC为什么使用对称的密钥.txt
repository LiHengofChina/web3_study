

MAC（消息认证码）和数字签名是两种不同的认证机制，它们的工作方式和安全保障也有所不同
//==================================================================================================================================
//==================================================================================================================================
//=====================================（1）MAC（消息认证码）
//=====================================（1）MAC（消息认证码）

（1）使用对称密钥：在MAC中，发送者和接收者共享相同的密钥（对称密钥）。这意味着双方都能够生成和验证消息认证码（MAC）。

（2）工作原理：发送者使用 "共享的对称密钥" 和 "消息内容" 生成一个MAC（消息认证码）。
			   接收者接收到消息后，使用 "相同的密钥" 来验证这个MAC，以确保消息没有被篡改，且来 "自合法的发送者"。

（3）特点：
		效率高：因为使用对称密钥，加密和验证速度较快。
		双方共享密钥：只有 "持有密钥的人" 才能生成或验证MAC，确保消息的 "完整性和真实性"。

（4）常见算法：HMAC（基于哈希的消息认证码），如 HMAC-SHA256，HMAC-SHA512。

（5）不足之处：因为发送者和接收者 "使用相同的密钥"，
	  所以存在信任问题，双方必须保 "持密钥的安全" 。如果密钥泄露，任何人都可以 "伪造消息"。


//=====================================（2）数字签名（Digital Signature）
//=====================================（2）数字签名（Digital Signature）

（1）使用非对称密钥：数字签名使用一对非对称密钥，即私钥和公钥。
		//发送者用 "私钥进行签名"，而接收者使用 "公钥来验证签名"。

（2）工作原理：发送者对 "消息内容" 进行哈希运算生成摘要（哈希值），
			然后使用私钥对 "这个哈希值" 进行 "加密" 生成 "签名"。
			接收者接收到消息和签名后，使用  "发送者的公钥" 来解密签名，
			获取哈希值，然后通过重新计算消息的哈希值，进行对比验证。


（3）特点：
	（1）身份验证：由于只有发送者持有私钥，因此签名可以证明消息确实来自于合法的发送者（不可伪造）。
	（2）公开验证：接收者只需拥有发送者的公钥即可验证签名，不需要持有私钥。

（4）常见算法：RSA、ECDSA等。



//================================================================================================================================== 密钥类型
//================================================================================================================================== 密钥类型

（1）密钥类型：

	MAC：使用对称密钥，发送者和接收者都使用同一个密钥进行生成和验证。
	数字签名：使用非对称密钥，发送者用私钥生成签名，接收者用公钥验证。

（2）安全性：

	MAC：由于双方共享相同的密钥，MAC无法提供强身份认证。
		 换句话说，接收者可以生成与发送者相同的MAC，这意味着接收者无法区分消息是否是由发送者生成的。

	数字签名：由于签名使用非对称密钥，只有发送者持有私钥，
			  接收者无法伪造签名，因此数字签名提供了更强的身份验证能力。

（3）应用场景：
	MAC：常用于对性能要求较高、对身份验证要求不严格的场景，如网络协议中的数据完整性验证（如IPSec、SSL/TLS中HMAC的使用）。
	数字签名：常用于对安全性和身份验证要求较高的场景，如数字证书、软件签名、电子合同等。

//================================================================================================================================== 为什么MAC使用对称密钥？
//================================================================================================================================== 为什么MAC使用对称密钥？

MAC的设计目标是消息完整性和真实性，通过共享密钥机制来快速验证数据的一致性。
由于 "对称密钥" 加密算法通常比 "非对称" 加密算法更高效，所以在需要较快速度但不强调强身份验证的场景下，使用MAC是一种合理的选择。



