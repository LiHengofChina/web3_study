//=============================================================================================== 深入理解
//=============================================================================================== 深入理解


就是说 "访问的服务器"，实际上是使用 "CA的公钥" 来解密 "被CA签名（哈希+CA私钥加密）的证书"，

客户端解密之后得到 "服务的公钥"，然后保存 "服务的公钥"，



//===================================== 具体过程解释
//===================================== 具体过程解释

//============ "CA 签名的证书" 验证
//============ "CA 签名的证书" 验证

	（1）访问服务器时，"客户端（例如浏览器）" 会收到 "服务器的证书"，这个证书是"由 CA 签名"的。
							// "由 CA 签名" 指使用CA私钥加密的
							// "会收到" 说明在建立链接时，服务端会送 "花钱买来的证书"
							// 在建立连接时（如 SSL/TLS 握手阶段），会发送公钥给对方：
							// 自签名证书：对方可能不信任，因为对方没有预存你的证书或不知道你是谁。
							// CA签名的证书：对方可以信任，因为操作系统和浏览器中已经预埋了 CA 的根证书，所以对方可以通过验证 CA 的签名来确认证书的真实性。
							// 这就是为什么在公网环境中，使用CA签名的证书是更可靠的方式。

	（2）客户端使用 "预埋的 CA 公钥"来 验证 "CA 对证书的签名"，确保证书确实是由 "可信的 CA " 签发的，并且证书未被篡改。
							//验证 "CA 对证书的签名" 先解密，再验证


	（3）验证成功后，客户端信任 "该证书" ，认为证书中的公钥（服务器的公钥）是有效的。
							//证书中才有 "公钥"，也就是服务端的公钥

//============ 后续通信：
//============ 后续通信：
	（1）验证完证书后，客户端获取到服务器的公钥。


 
