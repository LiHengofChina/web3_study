

//================================================================= 背景
//================================================================= 背景

将敏感数据直接存放在 JWT（JSON Web Token） 的 Payload 中是不安全的。

JWT 的 Payload 部分是经过 Base64URL 编码 的，并不是加密的，这意味着任何人都可以解码 JWT 并查看其中的内容。

因此，如果将敏感数据（如密码、个人身份信息等）直接存放在 JWT 中，是不安全的。

//================================================================= 不安全 主要原因如下：
//================================================================= 不安全 主要原因如下：

（1）JWT 的 Payload 只是 Base64URL 编码的，并未加密，任何人可以轻松解码并查看其中的数据。
（2）签名不等于加密：JWT 的签名只是用来验证数据的完整性，防止数据被篡改。
（3）JWT 通常在客户端存储：JWT 通常存储在客户端（如浏览器的 localStorage 或 cookies），
	 这些存储位置可能会被恶意软件或 XSS 攻击访问到。

//================================================================= 例子：使用 JWE 进行加密
//================================================================= 例子：使用 JWE 进行加密

例子：使用 JWE 进行加密

如果你需要对 JWT 进行加密，可以使用 JWE：

// 加密 JWT
String jwt = Jwts.builder()
        .setSubject("user123")
        .claim("role", "admin")
        .signWith(key, SignatureAlgorithm.HS256)
        .encryptWith(publicKey) // 使用 JWE 加密
        .compact();

// 解密和验证 JWT
Claims claims = Jwts.parserBuilder()
        .setSigningKey(privateKey) // 解密密钥
        .build()
        .parseClaimsJws(jwt)
        .getBody();
/**
（1）加密时，通常使用 接收者的公钥，因为公钥是公开的，
	 任何人都可以使用它进行加密。但只有拥有相应私钥的人才能解密消息。
（2）解密时使用私钥：解密时，接收者使用 对应的私钥 解密消息，因为私钥是保密的，
	 只有合法持有私钥的用户可以解密和读取消息的内容。
*/


