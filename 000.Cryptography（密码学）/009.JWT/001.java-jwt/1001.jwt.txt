

//======================================================== JSON Web Token (JWT) 简介
//======================================================== JSON Web Token (JWT) 简介

JWT 是一种紧凑的、URL 安全的方式，能够在网络上 "安全地传递认证信息"。
JWT 通常用于身份验证，包含一组声明（claims），这些声明被签名并且可以验证。



//======================================================== Jwts
//======================================================== Jwts
Jwts 是 Java 中用于处理 JSON Web Tokens (JWT) 的一个类，
属于 io.jsonwebtoken 包，它是 JSON Web Token (JWT) 的一个流行库，
通常用于 "安全认证" 和 "信息传递"。

//========================= Jwts 类的作用
//========================= Jwts 类的作用

Jwts 是一个实用工具类，提供了 "构建"、"解析"和 "验证 JWT" 的简洁方法。
它通常用于以下几个主要用途：

//===============（1）创建 JWT:
//===============（1）创建 JWT:

	（1）你可以使用 Jwts.builder() 来创建一个新的 JWT token。
	（2）它允许你添加声明（claims）、设置签发人、接收者、到期时间等。
	（3）最终，你可以使用 .signWith() 方法来签名这个 token，
		 通常使用 HMAC SHA 或 RSA 算法。

//===============（2）解析 JWT:
//===============（2）解析 JWT:
	（1）使用 Jwts.parser() 你可以解析一个现有的 JWT token。
	（2）它可以验证签名，并提取 token 中包含的声明。

//===============（3）验证 JWT:
//===============（3）验证 JWT:
		（1）在解析 JWT 时，Jwts.parser() 会自动验证签名，
			 以确保 token 没有被篡改。
		（2）你还可以设置额外的验证步骤，
			 比如验证 token 的到期时间、发行人等。

