
SK "永远不应该在网络上传输"，
它只在 "客户端本地用" 来 "生成签名"。 

//============================================================
//============================================================

我网页要使用sk进行签名，那么我的sk就不能写死在js代码中（因为第一次请求页面会传输sk），
而是通过其它渠道放置在客户端的某个地方


//============================================================
//============================================================
在浏览器中，任何在 JavaScript 中写死的内容都是可以被查看的，
无论是通过查看源码、开发者工具，还是浏览器缓存。
因此，直接将 SK 写在 JavaScript 中是非常不安全的。


//============================================================ 如何安全地在网页端使用 SK 进行签名：
//============================================================ 如何安全地在网页端使用 SK 进行签名：

（1）避免直接在前端存储 SK：

	Web 应用通常不会直接使用 SK，因为浏览器环境中的安全性较低，很难做到安全存储 SK。
	如果需要在浏览器中进行签名，通常会采取以下几种方式：


（2）使用服务器端签名：//内部的服务，通常不会通过网络传输。
	//==================
	//==================
	（1）流程：
		  "客户端" 将 "需要签名的数据" 发送到服务器， "服务器" 使用 SK 对数据进行签名。

	（2）然后，服务器将生成的签名返回给客户端，客户端将 "该签名" 附加到 "后续的请求中" 发送给 "第三方服务"。

	//==================
	//==================
	优点：SK 永远不会出现在客户端，只在服务器端进行签名，因此 SK 是安全的。

	//==================适用场景：
	这种方式适用于大多数场景，特别是当你不希望把 SK 暴露在客户端时。

