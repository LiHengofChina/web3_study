
//==================================================（1）保护数据保密性
//==================================================（1）保护数据保密性

//=========== （1）加密（Encryption）
//=========== （1）加密（Encryption）

（1）对称加密：加密和解密使用相同的密钥，主要用于保护数据的保密性。
		//常见算法：AES、DES、3DES、Blowfish。

（2）非对称加密：加密和解密使用不同的密钥，一个是公钥，一个是私钥。
				 //========= 注意 "公钥" 和 "私钥" 都可以用来加解密
				 //========= 注意 "公钥" 和 "私钥" 都可以用来加解密
				 （1）：加密数据（或协商时的对称密钥）时：公钥加密，私钥解密，通常用于 "加密敏感数据" 或 "安全传输密钥（指对称密钥）"。
				 （2）：签名时：使用 "私钥" 加密（"传递后的数据"），"公钥" 解密，保证完整性。

				 //========= 常见算法：
				 //========= 常见算法：
				 RSA、ECC（椭圆曲线加密）。

//==================================================（2）保证数据的真实性和完整性
//==================================================（2）保证数据的真实性和完整性
//===========（1）签名（Signature）
//===========（1）签名（Signature）


（1）生成签名：哈希（Hashing）
			   哈希函数将任意大小的数据转换为固定大小的哈希值，用于验证数据的完整性。
			   哈希函数是不可逆的，无法从哈希值还原原始数据。
			   常见算法：MD5（已过时）、SHA-1（不再安全）、SHA-256、SHA-3。

（2）签名加密： 使用 "非对称加密技术" ，通常是私钥签名，公钥验证，确保数据的真实性和完整性。
				常见算法：RSA、DSA、ECDSA。

//===========（2）MAC（Signature）
//===========（2）MAC（Signature）

（1）MAC（Message Authentication Code）：
				使用  "对称加密技术"  ，
				"发送者" 和 "接收者" 共享相同的 "密钥" 来 "生成和验" 证消息认证码，
				确保消息的 "完整性和真实性"。
				常见算法：HMAC-SHA256、HMAC-SHA512、CMAC。



