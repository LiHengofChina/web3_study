

//================================= 密钥编码方式
//================================= 密钥编码方式

密钥通常可以通过以下两种主要方式编码：

（1）PEM（Privacy Enhanced Mail）：
		这是一种基于文本的编码格式，
		（1）通常以 -----BEGIN PRIVATE KEY----- 或 -----BEGIN PUBLIC KEY----- 这样的标头开始，
		（2）并使用 Base64 编码密钥数据。

（2）DER（Distinguished Encoding Rules）：
		这是二进制编码的格式，适合程序直接处理，但不易阅读或编辑。


（3）PGP（Pretty Good Privacy）：
		这是 OpenPGP 标准使用的一种密钥编码格式，
		（1）通常以 -----BEGIN PGP PUBLIC KEY BLOCK----- 或 -----BEGIN PGP PRIVATE KEY BLOCK----- 开始，
		（2）使用 Base64 编码的 ASCII 装甲格式表示密钥。
		（3）PGP 格式的密钥广泛用于电子邮件加密和数据加密传输。
		（4）它支持对称加密和非对称加密，并结合签名用于加密和验证。



//================================= 不同工具生成的密钥格式
//================================= 不同工具生成的密钥格式



（1）OpenSSL：	默认情况下生成的密钥通常是PEM 格式的，文本表示，容易阅读和移植。
（2）Python（cryptography 库）：	Python 也可以生成PEM 格式的密钥文件，通常兼容 OpenSSL。
（3）Java（KeyPairGenerator）：Java 默认生成的密钥通常是二进制格式（DER 编码），因此看起来与 PEM 格式不同。
（4）GnuPG（GPG）：	生成的密钥是 PGP 格式，用于加密和解密的非对称密钥，通常以装甲格式（ASCII Armored）存储。



//================================= Java 密钥的差异：
//================================= Java 密钥的差异：

Java 默认使用二进制格式（DER 编码）来存储密钥，而 OpenSSL 和 Python 通常使用文本格式（PEM 编码）。

Java 生成的密钥看起来与 Python 和 OpenSSL 生成的不同，原因是它们使用了不同的格式。
如果需要一致的格式，可以在 Java 中将密钥转换为 PEM 格式，或者在 OpenSSL 中将 PEM 转换为 DER。

同样，PGP 格式与 PEM 和 DER 格式不同，因为它使用了 OpenPGP 标准，
用于不同的加密和签名用途。PGP 密钥在 GnuPG（GPG）中生成，使用 ASCII 装甲格式便于数据传输。


不管密钥是用哪种格式存储的，PEM 和 DER 格式的密钥内容在加密层面上是一样的，只是存储方式不同。






