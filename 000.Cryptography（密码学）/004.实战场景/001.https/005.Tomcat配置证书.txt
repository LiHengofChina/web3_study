


//================================= 配置 tomcat 的SSL连接器
//================================= 配置 tomcat 的SSL连接器

	<Connector

		//=============================================   SSL/TLS  
		//=============================================   SSL/TLS  
		port="8443"	//这是 Tomcat 使用 HTTPS 协议的端口（默认是 8443），即你的服务器会通过 https:// 访问。

		protocol="org.apache.coyote.http11.Http11NioProtocol" 
						//指定了 Tomcat 使用的连接协议，这个协议决定了 Tomcat 如何处理 HTTP/HTTPS 请求。
						//Http11NioProtocol 是 Tomcat 的一种 NIO（非阻塞 I/O） 处理协议，基于 Java 的 NIO 技术，能够提高服务器的并发处理能力。


		scheme="https" //这个配置只是告诉 Tomcat 连接的协议是 HTTPS，即这条连接 "应该被视为" 使用 HTTPS 协议的通信。
					   //仅仅是标记连接使用 HTTPS 协议，不会真正启用加密。

		secure="true"  //表示该连接是安全的
					   //它是一个标识，确保 Tomcat 将这个连接视为安全连接，并且可以在请求处理时根据此标识做出相应的安全处理。

		SSLEnabled="true"	// 表示 "服务器启用 SSL/TLS 加密" ,是开启 SSL/TLS 加密的关键配置。它启用 Tomcat 的 SSL/TLS 功能，确保通信使用加密。 这是双向加密的
							// SSLEnabled="true" 后，客户端在与 Tomcat 建立连接时，就会进行 SSL/TLS 协商过程，
							// 服务器和客户端之间的通信已经是加密的，无论是服务器发送给客户端的数据，还是客户端发送给服务器的数据，都会通过加密来保护隐私和数据完整性。
							//  SSL/TLS 加密通信（双向加密）：

		sslProtocol="TLS"	//指定使用的加密协议版本，这里是 TLS，通常是最新的 TLS 版本。
							//指定了 SSL/TLS 协议版本，表示 Tomcat 在启用 SSL 加密时使用的加密协议。
							//TLS（Transport Layer Security） 是 SSL 的后继版本，SSL 已经逐渐被淘汰，因为它存在严重的安全漏洞。
							//而 TLS 是目前广泛使用的加密协议，确保安全的通信。

		maxThreads="150"    //表示最多可以同时处理 150 个连接线程。

		//=============================================  密钥库（keystore）：
		//=============================================  密钥库（keystore）：
		keystoreFile="c:/keys/tomcat.keystore"		//keystoreFile="c:/keys/tomcat.keystore"：指定存储私钥和证书的密钥库文件的位置。//这个密钥库中通常包含服务器的私钥和公钥证书（自签名证书或由 CA 签名的证书）。
		keystorePass="123456"  //密钥库文件的密码，用于保护密钥库的内容。

		 //=============================================  信任库（truststore）：
		 //=============================================  信任库（truststore）：
		 //启用双向 SSL  要求客户端也提供证书（即客户端认证）。
		 //服务器不仅提供自己的证书，还要求客户端提供证书，以验证客户端的身份。	 
		 clientAuth="true"
		 truststoreFile="c:/keys/tomcat.keystore" 
							//指定信任库的位置。"信任库" 用于存储  "客户端证书和受信任的 CA 证书"。
							//因为客户端的证书是由 "CA签名（私钥加密）" 的
							//Tomcat 会使用这个信任库来验证客户端的身份。
		 truststorePass="123456"  


	/>



 